---
description: Regra de frontend para o projeto PathfinderManagementSoftware.   Define papel de desenvolvedor frontend s√™nior com foco em UI/UX,   regras de neg√≥cio, arquitetura base, paleta de cores, roadmap de MVPs   e guidelines de design. Deve ser sempre aplicada pelo Cursor AI.
alwaysApply: true
---

# Prompt Inicial

Voc√™ deve assumir o papel de um **Desenvolvedor Frontend S√™nior** com s√≥lidos conhecimentos em **React, TypeScript e arquitetura moderna**, al√©m de dom√≠nio em **UI/UX** (design system, acessibilidade, padr√µes de confirma√ß√£o, boas pr√°ticas de usabilidade).
Seu objetivo √© sempre gerar c√≥digo e componentes de frontend de alta qualidade para o projeto **PathfinderManagementSoftware**, respeitando as regras de neg√≥cio, boas pr√°ticas de seguran√ßa, escalabilidade e a paleta de cores definida.
Todas as decis√µes devem considerar MVPs (MVP0, MVP1, MVP2+) e seguir as diretrizes abaixo como fonte de verdade.

---

## Stack base

- React 18 + TypeScript + Vite
- Material UI (MUI v6) com tema customizado
- TanStack Query + Zustand (estado)
- React Hook Form + Zod (forms/valida√ß√£o)
- React Router v6
- JWT Auth: access token em mem√≥ria, refresh em httpOnly cookie seguro
- ESLint + Prettier, testes com Vitest/RTL (unit) e Playwright (E2E)

---

## üé® Paleta de Cores Oficial

- Azul Real: `#0D47A1`
- Vermelho Imperial: `#B71C1C`
- Branco: `#FFFFFF`
- Dourado: `#FFD700`
- Neutros: `#F5F5F5` / `#212121`

---

## üß© MVP Roadmap

### MVP0 (Essencial)

- Onboarding: preenchimento parcial, bloqueio de a√ß√µes at√© completar campos obrigat√≥rios.
- Cada membro pertence a 1 clube e 1 unidade.
- Diretor/Secret√°rio s√≥ gerenciam membros do pr√≥prio clube.
- Dados sens√≠veis (CPF, telefone, email n√£o verificado, endere√ßo, nascimento, m√©dicos) sempre mascarados, nunca persistidos localmente.
- **Sistema de Eventos**: CRUD completo com regras opcionais (idade, info m√©dica, len√ßo)
- **Timeline Visual**: Exibi√ß√£o interativa de atividades recentes por n√≠vel hier√°rquico
- UX Safety Rails:
  - useConfirm global para excluir/convites.
  - Guardas de formul√°rio sujo ("altera√ß√µes n√£o salvas").
  - Preven√ß√£o de duplo envio (bot√£o disabled).
  - Toasts/snackbars padronizados.
- Dark mode + mobile-first obrigat√≥rios.
- Pagina√ß√£o simples.

### üéâ Sistema de Eventos - Frontend

#### Componentes de Eventos

- **EventCard**: Exibi√ß√£o de evento com m√©tricas (RegisteredCount, Capacity, etc.)
- **EventForm**: Cria√ß√£o/edi√ß√£o com valida√ß√µes de regras opcionais
- **EventFilters**: Filtros por visibilidade, audi√™ncia, data, regras
- **EventParticipation**: Inscri√ß√£o/desinscri√ß√£o com valida√ß√µes
- **EventMetrics**: Dashboard de m√©tricas em tempo real

#### Regras de Valida√ß√£o Frontend

- **Idade**: Valida√ß√£o em tempo real baseada na data de in√≠cio (BRT)
- **Info M√©dica**: Bloqueio visual quando `RequiresMedicalInfo=true`
- **Len√ßo**: Indicador visual quando `RequiresScarfInvested=true`
- **Audi√™ncia**: Exibi√ß√£o clara de quem pode ver vs. quem pode se inscrever

#### Estados de Inscri√ß√£o

- **Dispon√≠vel**: Bot√£o "Inscrever-se" ativo
- **Lista de Espera**: Bot√£o "Entrar na Lista" quando capacidade esgotada
- **Bloqueado**: Bot√£o desabilitado com tooltip explicativo
- **Inscrito**: Bot√£o "Cancelar Inscri√ß√£o" com confirma√ß√£o

#### Mudan√ßas de Audi√™ncia

- **Dry-run**: Modal de pr√©-visualiza√ß√£o antes de aplicar mudan√ßas
- **Warnings**: Alertas visuais para mudan√ßas restritivas
- **News Feed**: Exibi√ß√£o de notifica√ß√µes de mudan√ßas de audi√™ncia
- **Tasks**: Lista de tarefas pendentes para revis√£o

### MVP1 (Intermedi√°rio)

- Transfer√™ncia de membros entre clubes/unidades (com hist√≥rico).
- Pap√©is hier√°rquicos maiores (Distrital, Regional, Associa√ß√£o, Uni√£o).
- Undo com soft-delete.
- A√ß√µes em lote (mover/excluir m√∫ltiplos).
- Skeleton loading.
- Storybook para componentes.
- Monitoramento de erros com Sentry.
- Pagina√ß√£o server-side + virtualiza√ß√£o.

### MVP2+ (Avan√ßado)

- PWA com cache de drafts n√£o sens√≠veis.
- Sincroniza√ß√£o de conflitos (ETag/If-Match).
- WebSockets/SignalR para tempo real.
- Micro-frontends.
- Reautentica√ß√£o para a√ß√µes cr√≠ticas (senha/TOTP).
- Analytics (GA4/Mixpanel).

---

## üõ°Ô∏è UX / UI Guidelines

- Confirma√ß√£o sempre em di√°logos acess√≠veis (aria-labelledby, foco no cancelar).
- Exclus√µes definitivas exigem campo de digita√ß√£o.
- Convites: confirma√ß√£o com resumo (email, papel, clube) + cooldown (60s).
- Toasts/snackbars ‚Üí feedback curto e acion√°vel.
- Loading inline no MVP0; skeletons no MVP1.
- Undo via snackbar (MVP1).
- Dados sens√≠veis ‚Üí bot√£o "Revelar por 10s" + auditoria.

---

## ‚ú® Inspira√ß√µes UI/UX

- Material Design 3 (MUI) ‚Üí refer√™ncia principal.
- Linear.app ‚Üí fluidez e undo imediato.
- Ant Design ‚Üí tabelas e pagina√ß√£o robustas.
- Clerk/Supabase ‚Üí onboarding/convites.
- Gov.br Design System ‚Üí acessibilidade e clareza em formul√°rios longos.

---

---

## üîê Autentica√ß√£o e Fluxo de Login

### MVP0 (Essencial)

- **Rota dedicada**: `/login` (n√£o modal)
- **Redirecionamento**: Ao acessar rota protegida sem sess√£o ‚Üí `/login?next=<rotaOriginal>`
- **P√≥s-login**: Restaurar para `next` (fallback: `/dashboard`)
- **Tokens**:
  - Access token em mem√≥ria
  - Refresh em cookie httpOnly seguro
  - Silent refresh no app start e a cada 5 min antes do vencimento

### MVP1 (Intermedi√°rio)

- **Modal opcional**: Login acion√°vel em contexto (ex.: expira√ß√£o de sess√£o durante uso)

### MVP2+ (Avan√ßado)

- **SSO**: Google e outros provedores
- **Reautentica√ß√£o leve**: Para a√ß√µes cr√≠ticas

---

## üîí Dados Sens√≠veis - "Revelar por 10s"

### MVP0 (Essencial)

- **Timer autom√°tico**: 10s com contagem regressiva vis√≠vel
- **Bot√£o "Ocultar agora"**: Para ocultar manualmente
- **Estado**: Expirou ou clicou "Ocultar" ‚Üí volta ao estado mascarado
- **Auditoria**: Registra evento (id da entidade, campo, motivo opcional)

### MVP1 (Intermedi√°rio)

- **Copiar com expira√ß√£o**: Clipboard limpo em 10s quando suportado

### MVP2+ (Avan√ßado)

- **Reautentica√ß√£o**: Exigir para campos de alto risco

---

## üì± Responsividade e Breakpoints

### Configura√ß√£o

- **Mobile-first**: M√≠nimo efetivo 320px
- **MUI breakpoints**: xs:0, sm:600, md:900, lg:1200, xl:1536

### Diretrizes

- **Layouts cr√≠ticos**: Funcionar entre 320‚Äì384px sem overflow horizontal
- **Tabelas**: Empilhar em cart√µes no xs/sm; mostrar todas as colunas apenas em md+
- **Tocar alvo**: M√≠nimo 44√ó44 px
- **Tipografia**: Responsiva

---

## üåç Internacionaliza√ß√£o

### MVP0 (Essencial)

- **pt-BR**: Padr√£o com i18n "encanado"
- **Namespaces**: common, auth, members, etc.

### MVP1 (Intermedi√°rio)

- **en-US**: Completo (switch no header + persist√™ncia por perfil)

### MVP2+ (Avan√ßado)

- **es-ES**: Base para espanhol (strings priorizadas por tr√°fego)

---

## üß™ Testes e Cobertura

### Unit/Integration (Vitest + RTL) - MVP0

- **Cobertura m√≠nima**:
  - Lines ‚â• 70%
  - Statements ‚â• 70%
  - Functions ‚â• 65%
  - Branches ‚â• 60%
- **M√≥dulos obrigat√≥rios**: auth, guards de rota, useConfirm, m√°scaras/revelar, formul√°rios de onboarding

### E2E (Playwright) - MVP0

- **Smoke suite**: login/logout, redirecionamento next, criar/editar membro, confirmar exclus√£o (com cancel e confirmar), enviar convite

### MVP1

- **Cobertura**: 80/75/75/70
- **E2E**: Transfer√™ncia de membro, a√ß√µes em lote, undo

### Qualidade Cont√≠nua

- **Gate no CI**: Falha se cobertura cair >2% abaixo do alvo do branch principal

---

## üèõÔ∏è Hierarquia e Permiss√µes

### Escopo de Visualiza√ß√£o

#### MVP0 (Essencial)

- **Diretor/Secret√°rio do Clube**: Veem e gerenciam apenas membros do pr√≥prio clube (todas as unidades)
- **Distrital**: Leitura de todos os clubes do distrito; edi√ß√£o limitada (aprovar convites/transfer√™ncias quando delegado)
- **Regional**: Leitura de todos os clubes da regi√£o; edi√ß√£o limitada similar ao Distrital quando delegado

#### MVP1 (Intermedi√°rio)

- **Granularidade maior**: Por a√ß√£o (criar/editar/cancelar) via matriz de permiss√µes

### Delega√ß√£o de Aprova√ß√£o (Regional ‚Üí Distrital)

#### MVP0 (Essencial)

- **Sem delega√ß√£o din√¢mica**: Fluxo manual

#### MVP1 (Intermedi√°rio)

- **Tela "Delega√ß√µes"**: Regional marca checkboxes por tipo de aprova√ß√£o (entrada, transfer√™ncia, remo√ß√£o de cargo)
- **Validade**: Data in√≠cio/fim
- **UI**: Tabela com clubes subordinados + switch "Delegar ao Distrital"

### Mudan√ßa de Hierarquia (Transfer√™ncia entre Clubes)

#### MVP0 (Essencial)

- **Uma aprova√ß√£o**: Do clube de destino (Diretor/Secret√°rio)
- **Notifica√ß√£o**: Clube de origem √© notificado (sem veto)

#### MVP1 (Intermedi√°rio)

- **Aprova√ß√£o em cascata opcional**: Exigir aval do Distrital/Regional
- **Configur√°vel**: Por pol√≠tica

---

## üîí Dados Sens√≠veis e Mascaramento

### Campos a Mascarar (MVP0)

- CPF, telefone, email n√£o verificado, data de nascimento, endere√ßo completo
- Dados m√©dicos/contato de emerg√™ncia, anota√ß√µes disciplinares

### N√≠veis de Acesso

#### Diretor (do clube)

- **Pode ver**: Campos sens√≠veis dos membros do pr√≥prio clube

#### Secret√°rio (do clube)

- **Pode ver**: CPF/contatos/endere√ßo/data de nascimento
- **N√£o v√™**: Anota√ß√µes disciplinares por padr√£o
- **Dados m√©dicos**: Somente leitura (sem exportar)

#### Distrital/Regional

- **Vis√£o agregada**: Por padr√£o sem revelar campos sens√≠veis individuais
- **Apenas contagem/indicadores**: Revela√ß√£o pontual pode ser delegada (MVP1)

### Auditoria do "Revelar por 10s"

#### MVP0 (Essencial)

- **Registrar**: Quem, quando e qual campo foi revelado (ID do membro, campo, requestId)

#### MVP1 (Intermedi√°rio)

- **Incluir**: Motivo (campo livre) e IP/UA
- **Relat√≥rio export√°vel**: Para compliance

---

## üìù Onboarding e Valida√ß√£o

### Campos M√≠nimos para "Ativo" (MVP0)

- Nome completo
- Data de nascimento
- CPF v√°lido (formato e d√≠gito) + n√£o duplicado
- Um contato verificado (email ou telefone)
- Clube e Unidade atribu√≠dos
- Aceite de termos/consentimento (quando aplic√°vel)

**Status "ativo" = todos os itens acima cumpridos. Caso contr√°rio: "pendente".**

### Valida√ß√£o em Tempo Real

#### MVP0 (Essencial)

- **Client-side**: Valida√ß√£o de formato durante digita√ß√£o
- **Server-side**: Em blur/submiss√£o (CPF √∫nico, email √∫nico)

#### MVP1 (Intermedi√°rio)

- **Verifica√ß√£o ass√≠ncrona**: Telefone (OTP/SMS) e email (link m√°gico)

### Bloqueio de A√ß√µes

#### MVP0 (Essencial)

- **N√£o pode alocar**: Em unidade sem completar campos m√≠nimos

#### MVP1 (Intermedi√°rio)

- **Permitir "reserva de vaga"**: Na unidade com r√≥tulo Pendente (sem benef√≠cios at√© completar)

---

## üë• Gest√£o de Unidades e Aloca√ß√£o

### Capacidade Visual (MVP0)

- **Chip/badge**: Ocupa√ß√£o 12/15 + barra de progresso
- **Cores**: Verde ‚â§80%, amarelo 81‚Äì100%, vermelho >100%
- **Tooltip**: Faixa et√°ria sugerida/permitida

### Aloca√ß√£o Autom√°tica

#### MVP0 (Essencial)

- **Sugest√£o baseada**: Idade (regra et√°ria da unidade) + ocupa√ß√£o (priorizar menos lotadas)
- **Override manual**: Permitido

#### MVP1 (Intermedi√°rio)

- **Sugerir tamb√©m**: Por g√™nero/cargo quando aplic√°vel a regras internas

### Transfer√™ncia entre Unidades do Mesmo Clube

#### MVP0 (Essencial)

- **Permitido**: Confirma√ß√£o com resumo (origem ‚Üí destino) e impacto (agenda/tarefas)

#### MVP1 (Intermedi√°rio)

- **Hist√≥rico**: De movimenta√ß√µes por membro

---

## üéâ Eventos e Participa√ß√µes

### Elegibilidade (Visual - MVP0)

- **Badge por membro**:
  - Eleg√≠vel (ativo + atende crit√©rios de idade/sexo/cargo do evento)
  - Pendente (faltam requisitos m√≠nimos)
  - Ineleg√≠vel (fora de crit√©rios)
- **Filtro de lista**: Por elegibilidade

### Taxas (MVP0)

- **C√°lculo simples**: Taxa base do evento + opcionais (camisa, alimenta√ß√£o)
- **Mostrar resumo**: Por membro e total por unidade/clube (cards no topo)

#### MVP1 (Intermedi√°rio)

- **Descontos**: Por cargo/bolsa; parcelamento

### Confirma√ß√£o

#### MVP0 (Essencial)

- **Di√°logo de confirma√ß√£o**: Por membro (ou lote) com resumo de custos
- **Notifica√ß√£o**: Enviar ao respons√°vel

#### MVP1 (Intermedi√°rio)

- **Aceite digital**: Com termos do evento

---

## üìä Relat√≥rios e Exporta√ß√£o

### Permiss√µes

#### MVP0 (Essencial)

- **Diretor e Secret√°rio**: Exportam CSV do pr√≥prio clube
- **Distrital/Regional**: Exportam agregados (sem dados sens√≠veis individuais)

#### MVP1 (Intermedi√°rio)

- **Perfis superiores**: Podem solicitar extra√ß√£o detalhada com justificativa (auditoria)

### Filtros

#### MVP0 (Essencial)

- **Per√≠odo**: Cria√ß√£o/atualiza√ß√£o
- **Unidade, status**: Ativo/pendente/ineleg√≠vel
- **Faixa et√°ria**

#### MVP1 (Intermedi√°rio)

- **Cargo, elegibilidade**: Por evento
- **Flags de dados sens√≠veis**: Somente contagem

### Formato

#### MVP0 (Essencial)

- **Preview paginado**: Na tela (colunas definidas) + bot√£o Exportar CSV

#### MVP1 (Intermedi√°rio)

- **Exporta√ß√£o ass√≠ncrona**: Com notifica√ß√£o quando pronto

---

## üîî Notifica√ß√µes e Feedback

### Convites

#### MVP0 (Essencial)

- **Toast**: "Convite enviado" + badge "Pendente"
- **Exibir**: √öltimo envio e reenvio com cooldown (60s) e confirma√ß√£o

#### MVP1 (Intermedi√°rio)

- **Email + opcional SMS**: Ao aceitar, marcar "Ativado" e registrar data

### Aprova√ß√µes

#### MVP0 (Essencial)

- **Lista**: "Aguardando aprova√ß√£o" por clube
- **Alert**: Na home do Diretor/Secret√°rio

#### MVP1 (Intermedi√°rio)

- **Push/email**: Para perfis delegados (Distrital/Regional) conforme regras

### Erros de Valida√ß√£o (MVP0)

- **Inline no formul√°rio**: "CPF j√° cadastrado em outro membro: [ver registro]"
- **Oferecer a√ß√£o**: Ver, iniciar transfer√™ncia (quando aplic√°vel)

---

## üì± Mobile e Responsividade

### Funcionalidades Cr√≠ticas no Mobile (MVP0)

- Login, recupera√ß√£o de acesso
- Listar/buscar membros; ver perfil (com m√°scara/"revelar")
- Criar/editar membro (campos essenciais)
- Enviar/reenviar convite
- Aprovar transfer√™ncia de unidade dentro do clube

### Offline

#### MVP0 (Essencial)

- **N√£o suportado**

#### MVP2+ (Avan√ßado)

- **PWA**: Rascunhos de formul√°rios n√£o sens√≠veis (IndexedDB) e leitura de listas recentes

---

## ü©π PATCH ‚Äî Respostas √†s Perguntas P√≥s-MVP0 do Backend

> **Incorpora√ß√£o:** anexar este bloco ao final do arquivo .mdc existente. Todas as decis√µes abaixo s√£o **v√°lidas para o MVP0** salvo indica√ß√£o em contr√°rio.

### 1) Estrutura de Dados para Frontend

**Payload de cria√ß√£o (refer√™ncia):** usar o JSON enviado como _baseline_, por√©m o **MVP0** exige apenas o **m√≠nimo**:

- **Obrigat√≥rios (MVP0):**
  - `firstName`, `lastName`
  - `dateOfBirth` (ISO curto `YYYY-MM-DD`)
  - `cpf` (v√°lido, n√£o duplicado)
  - **Um contato verificado:** `loginInfo.email` **ou** `contacts[0].value` (telefone)
  - `clubId`, `unitId`
  - Aceite de termos/consentimento (quando aplic√°vel)
- **Opcionais (n√£o bloqueiam ativa√ß√£o):**
  - `middleNames`, `socialName`, `rg`
  - `addressInfo` completo
  - contatos adicionais
- **P√≥s-MVP0:** `baptismInfo`, `initialScarfInvestiture` e progresso espiritual.

**Valida√ß√µes:**

- **Frontend:** formato e m√°scaras (CPF, email, telefone, data), obrigatoriedade visual, idade v√°lida, CEP.
- **Backend (autoritativo):** unicidade (CPF/email/telefone), RBAC, consist√™ncia hier√°rquica (clube‚Üíunidade), capacidade de unidade, regras de elegibilidade.

---

### 2) Fluxo de Onboarding

- **Status `Pending`:** exibir **banner** no perfil + **checklist** com itens obrigat√≥rios (‚úÖ completo / ‚è≥ pendente / ‚ùå inv√°lido); cada item navega ao campo.
- **Checklist de ativa√ß√£o:** renderizar como lista clic√°vel; mostrar progresso (%). Ao completar obrigat√≥rios ‚Üí status muda para **Active**.
- **Bloqueios de opera√ß√£o:** mostrar **Dialog**/tooltip padronizado quando a√ß√£o for bloqueada (ex.: "Conclua CPF e contato verificado para continuar") com CTA **"Ir para checklist"**.

---

### 3) Sistema de Eventos

- **Elegibilidade visual:** badge por membro ‚Äî **Eleg√≠vel** (verde), **Pendente** (amarelo), **Ineleg√≠vel** (cinza/vermelho). Filtro r√°pido por elegibilidade.
- **Participa√ß√µes (MVP0):** inscri√ß√£o **simples** (toggle) + **resumo de taxas** (taxa base + opcionais) por membro; cards de totais por unidade/clube.
- **Pagamentos (MVP0):** registrar **inten√ß√£o/compromisso** (sem gateway).
- **Filtros essenciais:** unidade, status (ativo/pendente/ineleg√≠vel), faixa et√°ria, cargo (quando aplic√°vel).

---

### 4) Permiss√µes e Escopo

- **Diretor/Secret√°rio:** veem e gerenciam **apenas membros do pr√≥prio clube** (todas as unidades).
- **Distrital/Regional:** **leitura** de todos os clubes do seu escopo; **sem revelar dados sens√≠veis** individualmente no MVP0.
- **Delega√ß√µes (Regional‚ÜíDistrital):** **fora do MVP0**; entra no **MVP1** com tela de Delega√ß√µes.

---

### 5) UX/UI Espec√≠ficas

- **Dados sens√≠veis ‚Äî "Revelar por 10s":** timer **autom√°tico** com contagem regressiva + a√ß√£o **"Ocultar agora"**; ao expirar, volta a mascarado; **auditoria** (quem, quando, qual campo, id do membro, requestId). Motivo/IP/UA ‚Üí **MVP1**.
- **Confirma√ß√µes:** usar padr√£o global (`useConfirm`) para **exclus√µes**, **convites (enviar/reenviar com cooldown 60s)** e **transfer√™ncia entre unidades**; foco no **Cancelar**, `Esc` cancela, **Enter n√£o confirma**; hard-delete pede **digitar o nome**.
- **Loading states:** **spinners/linear progress** no **MVP0**; **skeleton loading** apenas no **MVP1**.

---

### 6) Integra√ß√£o com Backend

- **Base URL:** via env `VITE_API_BASE_URL` (dev padr√£o: `http://localhost:5258`).
- **CORS (dev):** permitir `http://localhost:5173`; m√©todos `GET,POST,PUT,PATCH,DELETE,OPTIONS`; headers `Content-Type, Authorization, X-Request-Id, Idempotency-Key`; `Credentials: true`.
- **Error handling:**
  - **401** ‚Üí redirect para `/login?next=‚Ä¶`
  - **403** ‚Üí alerta "Permiss√£o insuficiente"
  - **404** ‚Üí placeholder "N√£o encontrado"
  - **409** ‚Üí conflito (ex.: **CPF j√° existe**) com a√ß√£o sugerida (_ver registro_ / _iniciar transfer√™ncia_)
  - **422** ‚Üí exibir **erros por campo** no formul√°rio
  - **429** ‚Üí aviso de rate limit
  - **5xx** ‚Üí toast "Erro inesperado" (log no Sentry a partir do MVP1)

---

### 7) Dados de Teste (Dev)

- **Estrutura hier√°rquica de exemplo:**
  - **Clube A** (idA): **Harpia** (cap 15), **Falc√£o** (cap 15)
  - **Clube B** (idB): **√Åguia** (cap 12)
- **Usu√°rios de teste:**
  - Diretor_ClubeA / `dirA@example.com` / `Passw0rd!`
  - Secretario_ClubeA / `secA@example.com` / `Passw0rd!`
  - Distrital_D1 / `dist1@example.com` / `Passw0rd!` (leitura distrito)
  - Regional_R1 / `reg1@example.com` / `Passw0rd!` (leitura regi√£o)
- **Seed:** ~30 membros variados + 1 evento ativo (taxa base + opcional).

---

### 8) Observa√ß√µes Finais

- **Relat√≥rios CSV (MVP0):** **apenas Diretor do Clube**; Distrital/Regional veem **agregados na UI** (sem dados sens√≠veis individuais).
- **Datas/Timezone:** persistir em **UTC**; exibir em **America/Sao_Paulo**; formato `dd/MM/yyyy` (e `HH:mm` quando aplic√°vel).

---

---

## üéØ Metodologia Estrat√©gica de Desenvolvimento

### Abordagem H√≠brida: Admin ‚Üí Revisar por N√≠vel

**Para este projeto espec√≠fico, seguimos a metodologia h√≠brida que prioriza velocidade de desenvolvimento inicial com arquitetura flex√≠vel para escalabilidade posterior.**

#### 1. **Fase 1: Desenvolvimento Admin-First (MVP0)**

- **Foco**: Implementar funcionalidades completas para usu√°rio **Administrador**
- **Objetivo**: MVP funcional rapidamente
- **Estrat√©gia**: Desenvolver com arquitetura flex√≠vel desde o in√≠cio

#### 2. **Fase 2: Refatora√ß√£o Multi-N√≠vel (MVP1+)**

- **Foco**: Adaptar funcionalidades para diferentes n√≠veis de usu√°rio
- **Objetivo**: Escalabilidade e reutiliza√ß√£o de c√≥digo
- **Estrat√©gia**: Aproveitar arquitetura flex√≠vel criada na Fase 1

### **Por que esta abordagem para este projeto?**

#### ‚úÖ **Vantagens Contextuais**

- **Sistema hier√°rquico complexo**: 8 n√≠veis (Divis√£o ‚Üí Uni√£o ‚Üí Regi√£o ‚Üí Associa√ß√£o ‚Üí Distrito ‚Üí Clube ‚Üí Unidade ‚Üí Membro)
- **MVP0 focado**: Administrador como usu√°rio principal inicial
- **Desenvolvimento √°gil**: Funcionalidade b√°sica primeiro, refinamento depois
- **Arquitetura pensada**: C√≥digo flex√≠vel desde o in√≠cio

#### üèóÔ∏è **Implementa√ß√£o Inteligente**

**Estrutura de c√≥digo flex√≠vel:**

```typescript
// Hook flex√≠vel para diferentes n√≠veis
const useMembersList = (userLevel: UserLevel) => {
  // L√≥gica base + customiza√ß√µes por n√≠vel
};

// Componente base reutiliz√°vel
const MembersList = ({ userLevel, groupingStrategy }) => {
  // Renderiza√ß√£o base + customiza√ß√µes
};

// Context para gerenciar n√≠vel do usu√°rio
const UserLevelContext = createContext<UserLevel>("admin");
```

**Padr√µes de desenvolvimento:**

- **Hooks customizados** com par√¢metros de n√≠vel
- **Componentes base** com props de customiza√ß√£o
- **Contextos** para gerenciar estado de usu√°rio
- **Estrat√©gias** para diferentes comportamentos por n√≠vel

#### üìã **Cronograma de Implementa√ß√£o**

**MVP0 (Admin-First):**

1. ‚úÖ Sistema de autentica√ß√£o
2. ‚úÖ Dashboard com dados mockados
3. üîÑ **CRUDs completos para Admin** (em andamento)
4. ‚è≥ Integra√ß√£o com APIs reais
5. ‚è≥ Testes end-to-end

**MVP1 (Multi-N√≠vel):**

1. Refatora√ß√£o para diferentes n√≠veis de usu√°rio
2. Customiza√ß√µes espec√≠ficas por n√≠vel
3. Testes de permiss√µes e escopo
4. Otimiza√ß√µes de performance

#### üéØ **Benef√≠cios da Abordagem**

- **Desenvolvimento mais r√°pido** inicialmente
- **Arquitetura escal√°vel** desde o in√≠cio
- **Menos refatora√ß√£o** posterior
- **Foco em uma persona** por vez
- **MVP funcional** mais rapidamente
- **C√≥digo reutiliz√°vel** e bem estruturado

---

## üë• Sistema de Membros - Frontend MVP0

### **P√°gina Principal: MembersPage**

- **Rota**: `/members` (protegida, apenas autenticados)
- **N√≠vel**: Admin (MVP0), futuramente adapt√°vel para outros n√≠veis
- **Layout**: Full-width com sidebar de filtros e √°rea principal de listagem

### **Componentes Implementados**

#### **1. MemberFilters**

- **Busca textual**: Nome, CPF, email em tempo real
- **Filtros avan√ßados**: Status, g√™nero, faixa et√°ria, hierarquia
- **Filtros hier√°rquicos**: Divis√£o, Uni√£o, Regi√£o, Associa√ß√£o, Distrito, Clube, Unidade
- **Controle de estado**: Expandir/colapsar filtros avan√ßados
- **Contador de filtros ativos**: Badge visual com quantidade
- **Limpeza de filtros**: Bot√£o para resetar todos os filtros

#### **2. MembersList**

- **Agrupamento flex√≠vel**: Hier√°rquico, por clube, por unidade, lista simples
- **Sele√ß√£o m√∫ltipla**: Checkbox individual e "selecionar todos"
- **A√ß√µes por membro**: Visualizar, editar, transferir, excluir
- **Informa√ß√µes resumidas**: Nome, status, clube, unidade, idade, contato
- **Estados visuais**: Loading, erro, lista vazia
- **Expans√£o de grupos**: Collapse/expand para grupos hier√°rquicos

#### **3. useMembersList Hook**

- **Gerenciamento de estado**: Filtros, pagina√ß√£o, sele√ß√£o, dados
- **Cache inteligente**: React Query com staleTime e cacheTime
- **Performance**: useMemo para c√°lculos pesados, useCallback para fun√ß√µes
- **Flexibilidade**: Suporte a diferentes n√≠veis de usu√°rio e estrat√©gias
- **Estat√≠sticas**: C√°lculo em tempo real de m√©tricas

### **Funcionalidades Implementadas**

#### **Agrupamento Hier√°rquico**

- **Estrat√©gias**: Hier√°rquico, Por Clube, Por Unidade, Lista Simples
- **Visualiza√ß√£o**: Cards expans√≠veis com contadores de membros
- **Navega√ß√£o**: Breadcrumb hier√°rquico (Divis√£o > Uni√£o > Regi√£o...)
- **Performance**: Lazy loading de grupos e membros

#### **Filtros e Busca**

- **Busca global**: Campo √∫nico para nome, CPF, email
- **Filtros m√∫ltiplos**: Status, g√™nero, idade, hierarquia
- **Filtros hier√°rquicos**: Dropdowns com contadores de membros
- **Persist√™ncia**: Filtros mantidos durante navega√ß√£o
- **Reset**: Limpeza individual ou completa de filtros

#### **A√ß√µes e Opera√ß√µes**

- **CRUD completo**: Criar, visualizar, editar, excluir membros
- **A√ß√µes em massa**: Exportar, excluir, transferir selecionados
- **Transfer√™ncia**: Mover membros entre clubes/unidades
- **Valida√ß√£o**: CPF √∫nico, email √∫nico, campos obrigat√≥rios
- **Confirma√ß√£o**: Dialogs para a√ß√µes destrutivas

#### **Interface e UX**

- **Design responsivo**: Mobile-first, breakpoints Material-UI
- **Estados de loading**: Skeleton, progress bars, spinners
- **Feedback visual**: Snackbars, alerts, tooltips
- **Acessibilidade**: ARIA labels, navega√ß√£o por teclado
- **Performance**: Memoiza√ß√£o, lazy loading, virtualiza√ß√£o

### **Tipos e Interfaces**

- **Member**: Entidade principal com todos os campos
- **MemberFilters**: Interface para filtros com valida√ß√£o
- **MemberGroup**: Estrutura para agrupamento hier√°rquico
- **UserLevel**: Enum para diferentes n√≠veis de usu√°rio
- **HierarchyLevel**: Enum para n√≠veis hier√°rquicos
- **ContactType**: Enum para tipos de contato

### **Servi√ßos e APIs**

- **membersService**: Classe para comunica√ß√£o com backend
- **Endpoints completos**: CRUD, filtros, exporta√ß√£o, valida√ß√£o
- **Tratamento de erros**: Try/catch com feedback visual
- **Cache**: React Query para otimiza√ß√£o de requests
- **TypeScript**: Tipagem forte em todas as interfaces

### **Performance e Otimiza√ß√£o**

- **React.memo**: Componentes de lista para evitar re-renders
- **useMemo**: C√°lculos pesados e dados est√°ticos
- **useCallback**: Fun√ß√µes passadas como props
- **Lazy loading**: Componentes carregados sob demanda
- **Pagina√ß√£o**: 20 itens por p√°gina com navega√ß√£o

### **Pr√≥ximos Passos (MVP1)**

- **Adapta√ß√£o multi-n√≠vel**: Hook flex√≠vel para diferentes usu√°rios
- **Formul√°rios**: Cria√ß√£o e edi√ß√£o de membros
- **Relat√≥rios**: Dashboards espec√≠ficos por n√≠vel
- **Notifica√ß√µes**: Sistema de alertas e updates
- **Mobile**: App nativo ou PWA

---

## ‚ö° Instru√ß√£o para Cursor

Sempre respeitar este script como fonte de verdade para arquitetura, UX e regras de neg√≥cio ao gerar c√≥digo ou componentes do frontend PathfinderManagementSoftware.
